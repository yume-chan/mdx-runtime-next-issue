{"version":3,"sources":["content.md","App.js","reportWebVitals.js","index.js"],"names":["CommentContext","createContext","Comment","type","sourcePosition","props","context","useContext","Type","useState","hover","setHover","comments","start","line","input","setInput","className","style","position","padding","zIndex","onMouseEnter","onMouseLeave","width","backgroundColor","boxSizing","top","right","background","border","slice","map","x","value","onChange","e","target","onClick","updateComments","length","MarkdownComponent","column","Components","p","bind","undefined","h2","h3","blockquote","li","App","content","setContent","JSON","parse","window","localStorage","getItem","setComments","useEffect","fetch","contentUrl","then","response","text","maxWidth","margin","Provider","setItem","stringify","rawSourcePos","includeElementIndex","remarkPlugins","remarkGfm","remarkFrontmatter","remarkHeadingId","rehypePlugins","rehypeRaw","components","children","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c280125b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/content.9e0ac32e.md\";","import { createContext, useContext, useEffect, useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport rehypeRaw from 'rehype-raw';\nimport remarkFrontmatter from 'remark-frontmatter';\nimport remarkGfm from 'remark-gfm';\nimport remarkHeadingId from 'remark-heading-id';\nimport contentUrl from './content.md';\nimport './App.css';\n\nconst CommentContext = createContext(null);\n\nfunction Comment({ type, sourcePosition, ...props }) {\n  const context = useContext(CommentContext);\n  const Type = type;\n\n  const [hover, setHover] = useState(false);\n  const handleMouseEnter = () => {\n    setHover(true);\n  };\n  const handleMouseLeave = () => {\n    setHover(false);\n  };\n\n  const comments = context?.comments?.[sourcePosition.start.line] || [];\n\n  const [input, setInput] = useState('');\n  const handleSubmitClick = () => {\n    if (input) {\n      context.updateComments({\n        ...context.comments,\n        [sourcePosition.start.line]: [...comments, input],\n      });\n      setInput('');\n    }\n  };\n\n  return (\n    <div\n      className={type}\n      style={{ position: 'relative', padding: 1, zIndex: hover ? 1000 : 0 }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <Type\n        {...props}\n        style={{ width: '65%', backgroundColor: hover ? '#dde4a3' : 'transparent', boxSizing: 'border-box' }}\n      />\n\n      <div style={{ position: 'absolute', top: 0, right: 20, width: '30%', padding: '6px 20px', background: 'white', border: `1px solid ${hover ? '#dedede' : 'transparent'}`, }}>\n        {comments[0] && (\n          <div className=\"flex vertical-center comment\">\n            <div className=\"avatar\" />\n            <div className=\"username\">User:</div>\n            <div className=\"comment-text\">{comments[0]}</div>\n          </div>\n        )}\n\n        {hover ? (\n          <>\n            {comments.slice(1).map(x => (\n              <div key={x} className=\"flex vertical-center comment\">\n                <div className=\"avatar\" />\n                <div className=\"username\">User:</div>\n                <div className=\"comment-text\">{x}</div>\n              </div>\n            ))}\n\n            <div className=\"flex vertical-center\">\n              <div className=\"avatar\" />\n              <div className=\"username\">Me:</div>\n              <input value={input} onChange={e => setInput(e.target.value)} />\n              <button onClick={handleSubmitClick}>Submit</button>\n            </div>\n          </>\n        ) : comments.length > 1 && (\n          <div>+{comments.length - 1}</div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nfunction MarkdownComponent(type, { sourcePosition, ...props }) {\n  if (sourcePosition.start.column === 1) {\n    return (\n      <Comment\n        type={type}\n        sourcePosition={sourcePosition}\n        {...props}\n      />\n    );\n  } else {\n    const Type = type;\n    return (\n      <Type {...props} />\n    );\n  }\n}\n\nconst Components = {\n  p: MarkdownComponent.bind(undefined, 'p'),\n  h2: MarkdownComponent.bind(undefined, 'h2'),\n  h3: MarkdownComponent.bind(undefined, 'h3'),\n  blockquote: MarkdownComponent.bind(undefined, 'blockquote'),\n  li: MarkdownComponent.bind(undefined, 'li'),\n}\n\nfunction App() {\n  const [content, setContent] = useState('');\n  const [comments, setComments] = useState(JSON.parse(window.localStorage.getItem('comments') || '{}'));\n\n  const updateComments = (comments) => {\n    localStorage.setItem('comments', JSON.stringify(comments));\n    setComments(comments);\n  };\n\n  useEffect(() => {\n    fetch(contentUrl)\n      .then(response => response.text())\n      .then(text => setContent(text));\n  }, []);\n\n  return (\n    <div style={{ maxWidth: 1400, margin: '0 auto' }}>\n      <CommentContext.Provider value={{ comments, updateComments }}>\n        <ReactMarkdown\n          rawSourcePos\n          includeElementIndex\n          remarkPlugins={[remarkGfm, remarkFrontmatter, remarkHeadingId]}\n          rehypePlugins={[rehypeRaw]}\n          components={Components}\n          children={content}\n        />\n      </CommentContext.Provider>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}